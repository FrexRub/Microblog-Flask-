tags:
  - users
summary: Get User by ID
description: Get User by ID
operationId: get user me by id
parameters:
  - name: id
    in: path
    required: false
    schema:
      type: integer
      title: ID user
definitions:
  UserAll:
      properties:
        id:
          type: integer
          title: ID User
        name:
          type: string
          title: Name User
        followers:
          items:
            $ref: '#/definitions/User'
          type: array
          title: User Followers
        following:
          items:
            $ref: '#/definitions/User'
          type: array
          title: User Following
      type: object
      required:
        - id
        - name
        - followers
        - following
      title: UserAll

  User:
      properties:
        id:
          type: integer
          title: ID User
        name:
          type: string
          title: Name User
      type: object
      required:
        - id
        - name
      title: User

  UserOut:
    properties:
      rusult:
        type: boolean
        title: Response status
      user:
        allOf:
          - $ref: '#/definitions/UserAll'
        title: User info
    type: object
    required:
      - rusult
      - user
    title: UserOut

  ValidationError:
    properties:
      error_message:
        type: string
        title: Error Message
      error_type:
        type: string
        title: Error Type
      rusult:
        type: boolean
        title: Response status
    title: ValidationError
responses:
  200:
    description:
    schema:
      $ref: '#/definitions/UserOut'
  418:
    description:
    schema:
      $ref: '#/definitions/ValidationError'